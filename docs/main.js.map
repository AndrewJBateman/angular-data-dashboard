{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/google-chart/google-chart.module.ts","./src/app/google-chart/line-chart/line-chart.component.ts","./src/app/google-chart/line-chart/line-chart.component.html","./src/app/google-chart/pie-chart/pie-chart.component.ts","./src/app/google-chart/pie-chart/pie-chart.component.html","./src/app/google-chart/service/google-chart.service.ts","./src/app/google-chart/service/service.module.ts","./src/app/google-chart/table-chart/table-chart.component.ts","./src/app/google-chart/table-chart/table-chart.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styles: [`.header{\r\n    text-align: center;\r\n    margin: 20px;\r\n    font-family: serif;\r\n  }`],\r\n})\r\nexport class AppComponent {\r\n  title = \"angular-data-dashboard\";\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"header\">\r\n    <h2>\r\n      Angular Sales Dashboard\r\n    </h2>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-7\">\r\n      <app-line-chart />\r\n    </div>\r\n    <div class=\"col-5\">\r\n      <app-pie-chart />\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <app-table-chart />\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { GoogleChartModule } from './google-chart/google-chart.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n\t\tGoogleChartModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ServiceModule } from './service/service.module';\r\nimport { LineChartComponent } from './line-chart/line-chart.component';\r\nimport { PieChartComponent } from './pie-chart/pie-chart.component';\r\nimport { TableChartComponent } from './table-chart/table-chart.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [LineChartComponent, PieChartComponent, TableChartComponent],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tServiceModule\r\n\t],\r\n\texports: [LineChartComponent, PieChartComponent, TableChartComponent],\r\n\tproviders : []\r\n})\r\nexport class GoogleChartModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GoogleChartService } from \"../service/google-chart.service\";\r\n\r\n@Component({\r\n  selector: \"app-line-chart\",\r\n  templateUrl: \"./line-chart.component.html\",\r\n  styleUrls: [\"./line-chart.component.css\"],\r\n})\r\nexport class LineChartComponent implements OnInit {\r\n  private gLib: any;\r\n\r\n  constructor(private gChartService: GoogleChartService) {\r\n    this.gLib = this.gChartService.getGoogle();\r\n\r\n    // Load the Visualization API and the controls package.\r\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\", \"table\"] });\r\n\r\n    // Set a callback to run when the Google Visualization API is loaded.\r\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  // method using the Google Charts library using the gLib variable\r\n  // create a new chart using the LineChart method, passing in the container div to show the line chart.\r\n  private drawChart() {\r\n    const data = this.gLib.visualization.arrayToDataTable([\r\n      [\"Year\", \"Sales\", \"Expenses\"],\r\n      [\"2004\", 1000, 400],\r\n      [\"2005\", 1170, 460],\r\n      [\"2006\", 660, 1120],\r\n      [\"2007\", 1030, 540],\r\n    ]);\r\n\r\n    const options = {\r\n      title: \"Company Performance\",\r\n      curveType: \"function\",\r\n      legend: { position: \"bottom\" },\r\n    };\r\n\r\n    const chart = new this.gLib.visualization.LineChart(\r\n      document.getElementById(\"divLineChart\")\r\n    );\r\n\r\n    chart.draw(data, options);\r\n  }\r\n}\r\n","<div id=\"divLineChart\"></div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GoogleChartService } from \"../service/google-chart.service\";\r\n\r\n@Component({\r\n  selector: \"app-pie-chart\",\r\n  templateUrl: \"./pie-chart.component.html\",\r\n  styleUrls: [\"./pie-chart.component.css\"],\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n  private gLib: any;\r\n\r\n  constructor(private gChartService: GoogleChartService) {\r\n    this.gLib = this.gChartService.getGoogle();\r\n\r\n    // Load the Visualization API and the controls package.\r\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\", \"table\"] });\r\n\r\n    // Set a callback to run when the Google Visualization API is loaded.\r\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  private drawChart() {\r\n    const chart = new this.gLib.visualization.PieChart(\r\n      document.getElementById(\"divPieChart\")\r\n    );\r\n    const data = new this.gLib.visualization.DataTable();\r\n    data.addColumn(\"string\", \"Accessories\");\r\n    data.addColumn(\"number\", \"Quantity\");\r\n    data.addRows([\r\n      [\"Computers\", 3],\r\n      [\"Hard Drives\", 6],\r\n      [\"Printers\", 4],\r\n      [\"Monitors\", 5],\r\n      [\"RAM\", 2],\r\n    ]);\r\n\r\n    const options = { title: \"Sales Info\" };\r\n\r\n    chart.draw(data, options);\r\n  }\r\n}\r\n","<div id=\"divPieChart\"></div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ServiceModule } from \"./service.module\";\r\n\r\n// const refers to the Google Charts library script - path included in angular.json.\r\ndeclare const google: any;\r\n\r\n@Injectable({\r\n  providedIn: ServiceModule,\r\n})\r\nexport class GoogleChartService {\r\n  private google: any;\r\n  constructor() {\r\n    this.google = google;\r\n  }\r\n\r\n  getGoogle() {\r\n    return this.google;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n\tdeclarations: [],\r\n\timports: [\r\n\t\tCommonModule\r\n\t]\r\n})\r\nexport class ServiceModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GoogleChartService } from \"../service/google-chart.service\";\r\n\r\n@Component({\r\n  selector: \"app-table-chart\",\r\n  templateUrl: \"./table-chart.component.html\",\r\n  styleUrls: [\"./table-chart.component.css\"],\r\n})\r\nexport class TableChartComponent implements OnInit {\r\n  private gLib: any;\r\n\r\n  constructor(private gChartService: GoogleChartService) {\r\n    this.gLib = this.gChartService.getGoogle();\r\n\r\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\", \"table\"] });\r\n\r\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\r\n  }\r\n  ngOnInit() {}\r\n\r\n  private drawChart() {\r\n    const chart = new this.gLib.visualization.Table(\r\n      document.getElementById(\"divTableChart\")\r\n    );\r\n    const data = new this.gLib.visualization.DataTable();\r\n\r\n    data.addColumn(\"string\", \"Year\");\r\n    data.addColumn(\"number\", \"Sales\");\r\n    data.addColumn(\"number\", \"Expenses\");\r\n\r\n    data.addRows([\r\n      [\"2004\", 1000, 400],\r\n      [\"2005\", 1170, 460],\r\n      [\"2006\", 660, 1120],\r\n      [\"2007\", 1030, 540],\r\n    ]);\r\n\r\n    const options = {\r\n      title: \"Sales Tabular Data\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    };\r\n    chart.draw(data, options);\r\n  }\r\n}\r\n","<div id=\"divTableChart\"></div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","GoogleChartModule","AppModule","bootstrap","declarations","imports","CommonModule","ServiceModule","LineChartComponent","PieChartComponent","TableChartComponent","exports","gChartService","gLib","getGoogle","charts","load","packages","setOnLoadCallback","drawChart","bind","ngOnInit","data","visualization","arrayToDataTable","options","title","curveType","legend","position","chart","LineChart","document","getElementById","draw","PieChart","DataTable","addColumn","addRows","GoogleChartService","google","factory","providedIn","Table","width","height","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}