{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/google-chart/google-chart.module.ts","./src/app/google-chart/line-chart/line-chart.component.ts","./src/app/google-chart/line-chart/line-chart.component.html","./src/app/google-chart/pie-chart/pie-chart.component.ts","./src/app/google-chart/pie-chart/pie-chart.component.html","./src/app/google-chart/service/google-chart.service.ts","./src/app/google-chart/service/service.module.ts","./src/app/google-chart/table-chart/table-chart.component.ts","./src/app/google-chart/table-chart/table-chart.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  title = \"angular-data-dashboard\";\r\n}\r\n","<div class=\"container\">\n  <div class=\"header\">\n    <h2>\n      Angular Sales Dashboard\n    </h2>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-7\">\n      <app-line-chart></app-line-chart>\n    </div>\n    <div class=\"col-5\">\n      <app-pie-chart></app-pie-chart>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <app-table-chart></app-table-chart>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GoogleChartModule } from './google-chart/google-chart.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\t\tGoogleChartModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ServiceModule } from './service/service.module';\r\nimport { LineChartComponent } from './line-chart/line-chart.component';\r\nimport { PieChartComponent } from './pie-chart/pie-chart.component';\r\nimport { TableChartComponent } from './table-chart/table-chart.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [LineChartComponent, PieChartComponent, TableChartComponent],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tServiceModule\r\n\t],\r\n\texports: [LineChartComponent, PieChartComponent, TableChartComponent],\r\n\tproviders : []\r\n})\r\nexport class GoogleChartModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GoogleChartService } from \"../service/google-chart.service\";\r\n\r\n@Component({\r\n  selector: \"app-line-chart\",\r\n  templateUrl: \"./line-chart.component.html\",\r\n  styleUrls: [\"./line-chart.component.css\"],\r\n})\r\nexport class LineChartComponent implements OnInit {\r\n  private gLib: any;\r\n\r\n  constructor(private gChartService: GoogleChartService) {\r\n    this.gLib = this.gChartService.getGoogle();\r\n\r\n    // Load the Visualization API and the controls package.\r\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\", \"table\"] });\r\n\r\n    // Set a callback to run when the Google Visualization API is loaded.\r\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  // method using the Google Charts library using the gLib variable\r\n  // create a new chart using the LineChart method, passing in the container div to show the line chart.\r\n  private drawChart() {\r\n    const data = this.gLib.visualization.arrayToDataTable([\r\n      [\"Year\", \"Sales\", \"Expenses\"],\r\n      [\"2004\", 1000, 400],\r\n      [\"2005\", 1170, 460],\r\n      [\"2006\", 660, 1120],\r\n      [\"2007\", 1030, 540],\r\n    ]);\r\n\r\n    const options = {\r\n      title: \"Company Performance\",\r\n      curveType: \"function\",\r\n      legend: { position: \"bottom\" },\r\n    };\r\n\r\n    const chart = new this.gLib.visualization.LineChart(\r\n      document.getElementById(\"divLineChart\")\r\n    );\r\n\r\n    chart.draw(data, options);\r\n  }\r\n}\r\n","<div id=\"divLineChart\"></div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GoogleChartService } from \"../service/google-chart.service\";\r\n\r\n@Component({\r\n  selector: \"app-pie-chart\",\r\n  templateUrl: \"./pie-chart.component.html\",\r\n  styleUrls: [\"./pie-chart.component.css\"],\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n  private gLib: any;\r\n\r\n  constructor(private gChartService: GoogleChartService) {\r\n    this.gLib = this.gChartService.getGoogle();\r\n\r\n    // Load the Visualization API and the controls package.\r\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\", \"table\"] });\r\n\r\n    // Set a callback to run when the Google Visualization API is loaded.\r\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  private drawChart() {\r\n    const chart = new this.gLib.visualization.PieChart(\r\n      document.getElementById(\"divPieChart\")\r\n    );\r\n    const data = new this.gLib.visualization.DataTable();\r\n    data.addColumn(\"string\", \"Accessories\");\r\n    data.addColumn(\"number\", \"Quantity\");\r\n    data.addRows([\r\n      [\"Computers\", 3],\r\n      [\"Hard Drives\", 6],\r\n      [\"Printers\", 4],\r\n      [\"Monitors\", 5],\r\n      [\"RAM\", 2],\r\n    ]);\r\n\r\n    const options = { title: \"Sales Info\" };\r\n\r\n    chart.draw(data, options);\r\n  }\r\n}\r\n","<div id=\"divPieChart\"></div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ServiceModule } from \"./service.module\";\r\n\r\n// const refers to the Google Charts library script - path included in angular.json.\r\ndeclare const google: any;\r\n\r\n@Injectable({\r\n  providedIn: ServiceModule,\r\n})\r\nexport class GoogleChartService {\r\n  private google: any;\r\n  constructor() {\r\n    this.google = google;\r\n  }\r\n\r\n  getGoogle() {\r\n    return this.google;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n\tdeclarations: [],\r\n\timports: [\r\n\t\tCommonModule\r\n\t]\r\n})\r\nexport class ServiceModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GoogleChartService } from \"../service/google-chart.service\";\r\n\r\n@Component({\r\n  selector: \"app-table-chart\",\r\n  templateUrl: \"./table-chart.component.html\",\r\n  styleUrls: [\"./table-chart.component.css\"],\r\n})\r\nexport class TableChartComponent implements OnInit {\r\n  private gLib: any;\r\n\r\n  constructor(private gChartService: GoogleChartService) {\r\n    this.gLib = this.gChartService.getGoogle();\r\n\r\n    this.gLib.charts.load(\"current\", { packages: [\"corechart\", \"table\"] });\r\n\r\n    this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\r\n  }\r\n  ngOnInit() {}\r\n\r\n  private drawChart() {\r\n    const chart = new this.gLib.visualization.Table(\r\n      document.getElementById(\"divTableChart\")\r\n    );\r\n    const data = new this.gLib.visualization.DataTable();\r\n\r\n    data.addColumn(\"string\", \"Year\");\r\n    data.addColumn(\"number\", \"Sales\");\r\n    data.addColumn(\"number\", \"Expenses\");\r\n\r\n    data.addRows([\r\n      [\"2004\", 1000, 400],\r\n      [\"2005\", 1170, 460],\r\n      [\"2006\", 660, 1120],\r\n      [\"2007\", 1030, 540],\r\n    ]);\r\n\r\n    const options = {\r\n      title: \"Sales Tabular Data\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    };\r\n    chart.draw(data, options);\r\n  }\r\n}\r\n","<div id=\"divTableChart\"></div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}